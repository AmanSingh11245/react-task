@font-face {
  font-family: 'brownlight';
  src: url('../fonts/brownlight.eot');
  src: url('../fonts/brownlight.eot?#iefix') format('embedded-opentype'),
    url('../fonts/brownlight.woff2') format('woff2'),
    url('../fonts/brownlight.woff') format('woff'),
    url('../fonts/brownlight.svg#brownlight') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Brown';
  src: url('../fonts/Brown-Regular.eot');
  src: url('../fonts/Brown-Regular.eot?#iefix') format('embedded-opentype'),
    url('../fonts/Brown-Regular.woff2') format('woff2'),
    url('../fonts/Brown-Regular.woff') format('woff'),
    url('../fonts/Brown-Regular.ttf') format('truetype'),
    url('../fonts/Brown-Regular.svg#Brown-Regular') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'BrownMedium';
  src: url('../fonts/BrownMedium.eot');
  src: url('../fonts/BrownMedium.eot?#iefix') format('embedded-opentype'),
    url('../fonts/BrownMedium.woff2') format('woff2'),
    url('../fonts/BrownMedium.woff') format('woff'),
    url('../fonts/BrownMedium.ttf') format('truetype'),
    url('../fonts/BrownMedium.svg#BrownMedium') format('svg');
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Ivy Mode';
  src: url('../fonts/IvyMode-Regular.eot');
  src: local('Ivy Mode Regular'), local('Ivy-Mode-Regular'),
    url('../fonts/IvyMode-Regular.eot?#iefix') format('embedded-opentype'),
    url('../fonts/IvyMode-Regular.woff2') format('woff2'),
    url('../fonts/IvyMode-Regular.woff') format('woff'),
    url('../fonts/IvyMode-Regular.ttf') format('truetype'),
    url('IvyMode-Regular.svg#IvyMode-Regular') format('svg');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Ivy Mode';
  src: url('../fonts/IvyMode-SemiBold.eot');
  src: local('Ivy Mode Semi Bold'), local('Ivy-Mode-Semi-Bold'),
    url('../fonts/IvyMode-SemiBold.eot?#iefix') format('embedded-opentype'),
    url('../fonts/IvyMode-SemiBold.woff2') format('woff2'),
    url('../fonts/IvyMode-SemiBold.woff') format('woff'),
    url('../fonts/IvyMode-SemiBold.ttf') format('truetype'),
    url('../fonts/IvyMode-SemiBold.svg#IvyMode-SemiBold') format('svg');
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: #F9F7F2;
}

:root {
  --bgDefault: #F9F7F2;
  --primary: #B79535;
  --secondary: #222;
  --border: #ddd;
  --white: #fff;
  --black: #000;
  --bgLight: #F5F5F5;

  /* Breakpoints */
  --xs: 360px;
  --sm: 576px;
  --md: 768px;
  --lg: 992px;
  --xl: 1200px;
  --xxl: 1400px;
  --xxxl: 1600px;

  --gutter: 1rem;
}

.container {
  max-width: 100%;
  width: 100%;
  padding: 0 var(--gutter);
  margin: 0 auto;
  /* display: block; */
}

@media screen and (min-width: 576px) {
  .container {
    max-width: calc(var(--sm) - calc(var(--gutter) * 2));
  }
}

@media screen and (min-width: 768px) {
  .container {
    max-width: calc(var(--md) - calc(var(--gutter) * 2));
  }
}

@media screen and (min-width: 992px) {
  .container {
    max-width: calc(var(--lg) - calc(var(--gutter) * 2));
  }
}

@media screen and (min-width: 1200px) {
  .container {
    max-width: calc(var(--xl) - calc(var(--gutter) * 2));
  }
}

@media screen and (min-width: 1400px) {
  .container {
    max-width: calc(var(--xxl) - calc(var(--gutter) * 2));
  }
}

@media screen and (min-width: 1600px) {
  .container {
    max-width: calc(var(--xxxl) - calc(var(--gutter) * 2));
  }
}

.container--fluid {
  width: 100%;
}

.easeTime {
  transition-duration: 500ms;
}

/* Transitions */
.linkTransitions {
  transition: color var(--easeTime) ease, background-color var(--easeTime) ease;
}